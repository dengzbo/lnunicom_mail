<?xml version="1.0" encoding="UTF-8"?>
<!--W3C Schema generated by XMLSPY v2004 rel. 3 U (http://www.xmlspy.com)-->
<xs:schema xmlns="http://www.ceno.cn/cube" xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://www.ceno.cn/cube" elementFormDefault="qualified">
  <xs:complexType name="cubesystem">
    <xs:annotation>
      <xs:documentation>Cube System</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="default" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="boot"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="servers">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="server" type="server" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="hosts">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="host" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="server" type="server" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="name" type="serverName" use="required"/>
                <xs:attribute name="address" type="xs:string" use="required"/>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="main" type="cubesystem">
    <xs:annotation>
      <xs:documentation>Cube System，老的配置方式</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="cube" type="cubesystem">
    <xs:annotation>
      <xs:documentation>Cube System</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="server">
    <xs:annotation>
      <xs:documentation>服务器类型</xs:documentation>
    </xs:annotation>
    <xs:choice maxOccurs="unbounded">
      <xs:element ref="boot" minOccurs="0"/>
      <xs:element ref="config" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="classpath" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>CLASSPATH</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="connection" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="parameter" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
          <xs:attribute name="host" type="xs:string" use="required"/>
          <xs:attribute name="server" type="xs:string" use="required"/>
          <xs:attribute name="type" type="xs:string"/>
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="type" type="serverName" use="required"/>
    <xs:attribute name="port" type="xs:integer"/>
  </xs:complexType>
  <xs:simpleType name="serverName">
    <xs:annotation>
      <xs:documentation>服务器名称</xs:documentation>
    </xs:annotation>
    <xs:restriction base="baseName"/>
  </xs:simpleType>
  <xs:simpleType name="baseName">
    <xs:annotation>
      <xs:documentation>基础节点名称</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[a-z]([a-z]|[0-9]|_)*"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="config">
    <xs:annotation>
      <xs:documentation>XML-CONFIG内部配置</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="property" type="property" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="file" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="property">
    <xs:annotation>
      <xs:documentation>属性项类型</xs:documentation>
    </xs:annotation>
    <xs:attributeGroup ref="name-value"/>
  </xs:complexType>
  <xs:complexType name="parameter">
    <xs:annotation>
      <xs:documentation>参数项类型</xs:documentation>
    </xs:annotation>
    <xs:attributeGroup ref="name-value"/>
  </xs:complexType>
  <xs:attributeGroup name="name-value">
    <xs:annotation>
      <xs:documentation>名字和值的属性组</xs:documentation>
    </xs:annotation>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="value" type="xs:string" use="required"/>
  </xs:attributeGroup>
  <xs:element name="parameter" type="property">
    <xs:annotation>
      <xs:documentation>参数项类型</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="classpath">
    <xs:annotation>
      <xs:documentation>类路径定义</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="file" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>包路径</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="run" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>执行JAR文件中的XML
            如果这个参数是"true" ，表示执行/META-INF/nar/run.xml
            如果参数是其它的，比如："test"　表示执行/META-INF/nar/test.xml
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="mode" use="optional" default="append">
        <xs:annotation>
          <xs:documentation>路径的添加方式</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="append"/>
            <xs:pattern value="prepend"/>
            <xs:enumeration value="append"/>
            <xs:enumeration value="prepend"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="env" type="property">
    <xs:annotation>
      <xs:documentation>设置操作系统环境变量</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="user">
    <xs:annotation>
      <xs:documentation>进程启动使用的系统用户，默认是ares</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="name" type="baseName" use="optional" default="ares"/>
      <xs:attribute name="group" type="baseName" use="optional" default="ares"/>
      <xs:attribute name="uid" type="xs:integer" use="optional" default="1818"/>
      <xs:attribute name="gid" type="xs:integer" use="optional" default="1818"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="boot">
    <xs:annotation>
      <xs:documentation>进程启动需要的配置项</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="env" minOccurs="0" maxOccurs="unbounded"/>
        <xs:choice minOccurs="0">
          <xs:element ref="java"/>
          <xs:element ref="shell"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="bootable" type="xs:boolean" use="optional" default="true">
        <xs:annotation>
          <xs:documentation>是否可以启动，默认是true</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="supervisor">
    <xs:annotation>
      <xs:documentation>进程启动所需要的护卫程序，一般是选jdaemon或jnohup jdaemon有自动重起功能</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="base" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>程序的基础路径</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="name" use="optional" default="jdaemon">
        <xs:simpleType>
          <xs:restriction base="baseName">
            <xs:enumeration value="jdaemon"/>
            <xs:enumeration value="jnohup"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="java">
    <xs:annotation>
      <xs:documentation>Java需要的标记</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence maxOccurs="unbounded">
        <xs:element name="jdk" minOccurs="0">
          <xs:annotation>
            <xs:documentation>指定JDK的版本</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:attribute name="home" use="required">
              <xs:annotation>
                <xs:documentation>指定JDK的位置</xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="exe" use="optional" default="java">
              <xs:annotation>
                <xs:documentation>执行文件的名称，默认是java，在Windows下面可以指定为javaw</xs:documentation>
              </xs:annotation>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="vm-mode" minOccurs="0">
          <xs:annotation>
            <xs:documentation>JVM的模式</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:attribute name="mode" use="required">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="server"/>
                  <xs:enumeration value="client"/>
                  <xs:enumeration value="hotspot"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element ref="supervisor" minOccurs="0"/>
        <xs:element ref="user" minOccurs="0"/>
        <xs:element name="rotatelogs" minOccurs="0">
          <xs:annotation>
            <xs:documentation>程序日志分段配置。如果没有配置默认使用 $JAVA_LOG_HOME/${server_type}.log作为默认的日志文件</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:attribute name="pattern" use="required">
              <xs:annotation>
                <xs:documentation>例如：$JAVA_LOG_HOME/%Y-%m-%d/${server_type}.log，每天产生一个日志文件</xs:documentation>
              </xs:annotation>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="launcher" minOccurs="0">
          <xs:annotation>
            <xs:documentation>main函数所使用的类</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:attribute name="class" type="xs:string" use="optional" default="com.ceno.launcher.Launcher"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="memory" minOccurs="0">
          <xs:annotation>
            <xs:documentation>内存设置</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:attribute name="min" type="size" use="optional" default="32m">
              <xs:annotation>
                <xs:documentation>初始化内存</xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="max" type="size" use="optional" default="128m">
              <xs:annotation>
                <xs:documentation>上限内存大小</xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="stack_size" type="size" use="optional"/>
            <xs:attribute name="incgc" type="xs:boolean" use="optional">
              <xs:annotation>
                <xs:documentation>enable incremental garbage collection</xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="noclassgc" type="xs:boolean" use="optional">
              <xs:annotation>
                <xs:documentation>disable class garbage collection</xs:documentation>
              </xs:annotation>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="property" type="property" minOccurs="0" maxOccurs="unbounded">
          <xs:annotation>
            <xs:documentation>系统属性，会以 -DNAME=value 的形式传递给java命令</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="boot-classpath" minOccurs="0" maxOccurs="unbounded">
          <xs:annotation>
            <xs:documentation>JVM级的classpath</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:attribute name="file">
              <xs:annotation>
                <xs:documentation>包路径</xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="mode" use="optional" default="default">
              <xs:annotation>
                <xs:documentation>添加的方式</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="default"/>
                  <xs:enumeration value="append"/>
                  <xs:enumeration value="prepend"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element ref="classpath" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="verbose" minOccurs="0">
          <xs:annotation>
            <xs:documentation>是否让JVM打印信息</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:attribute name="class" type="xs:boolean" use="optional" default="false"/>
            <xs:attribute name="gc" type="xs:boolean" use="optional" default="false"/>
            <xs:attribute name="jni" type="xs:boolean" use="optional" default="false"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="debug" minOccurs="0">
          <xs:annotation>
            <xs:documentation>调试端口</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:attribute name="port" type="xs:integer" use="required"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="logger" minOccurs="0">
          <xs:annotation>
            <xs:documentation>设置com.ceno.log.priority和naisa.log.priority 或者
              com.ceno.log.xxx.priority等
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:attribute name="priority" use="required">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="TRACE"/>
                  <xs:enumeration value="DEBUG"/>
                  <xs:enumeration value="INFO"/>
                  <xs:enumeration value="WARN"/>
                  <xs:enumeration value="ERROR"/>
                  <xs:enumeration value="FATAL"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="pattern" type="xs:string" use="optional"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="extend" minOccurs="0" maxOccurs="unbounded">
          <xs:annotation>
            <xs:documentation>设置JVM的非标准参数，相当于传递给java命令的 -X 的参数</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:attribute name="option" type="xs:string" use="required"/>
          </xs:complexType>
        </xs:element>
        <xs:element ref="argument" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="size">
    <xs:annotation>
      <xs:documentation>大小</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[1-9](0-9])*(m|M|g|G|k|K)"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="boot-classpath">
    <xs:annotation>
      <xs:documentation>启动的Classpath</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="file" type="xs:string" use="required"/>
      <xs:attribute name="mode" use="optional">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="prepend"/>
            <xs:pattern value="append"/>
            <xs:enumeration value="append"/>
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="shell">
    <xs:annotation>
      <xs:documentation>Shell脚本</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="argument" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="command" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="argument">
    <xs:annotation>
      <xs:documentation>参数</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="value" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>参数值</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
</xs:schema>
